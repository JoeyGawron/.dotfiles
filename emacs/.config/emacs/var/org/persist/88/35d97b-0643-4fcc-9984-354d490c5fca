(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[nil nil #30=(headline (:raw-value #1="Welcome!" :begin 109 :end 1160 :pre-blank 1 :contents-begin 121 :contents-end 1159 :robust-begin 123 :robust-end 1157 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 109 :title #1# :mode nil :granularity element :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 17758 :end 17758 :robust-begin 3 :robust-end 17756 :post-blank 0 :post-affiliated 1 :path "/Users/joey/.dotfiles/emacs/.config/emacs/emacs.org" :mode org-data :CATEGORY "emacs" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #34=(headline (:raw-value #2="Startup Performance" :begin 1455 :end 1942 :pre-blank 1 :contents-begin 1478 :contents-end 1941 :robust-begin 1480 :robust-end 1939 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1455 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #32=(headline (:raw-value #4="Tips for Use" :begin 1160 :end 1455 :pre-blank 1 :contents-begin 1176 :contents-end 1454 :robust-begin 1178 :robust-end 1452 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1160 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #36=(headline (:raw-value #5="Automatic Package Updates" :begin 2928 :end 3539 :pre-blank 1 :contents-begin 2958 :contents-end 3538 :robust-begin 2960 :robust-end 3536 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2928 :title #5# :mode nil :granularity element :cached t :parent #9=(headline (:raw-value #6="Package System Setup" :begin 1942 :end 3539 :pre-blank 1 :contents-begin 1966 :contents-end 3538 :robust-begin 1968 :robust-end 3536 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1942 :title #6# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #41=(headline (:raw-value #7="Basic UI Configuration" :begin 4434 :end 5773 :pre-blank 1 :contents-begin 4460 :contents-end 5773 :robust-begin 4462 :robust-end 5771 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4434 :title #7# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #39=(headline (:raw-value #8="Keep Folders Clean" :begin 3539 :end 4434 :pre-blank 1 :contents-begin 3561 :contents-end 4433 :robust-begin 3563 :robust-end 4431 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3539 :title #8# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #9# 0] [[[[nil nil #12=(headline (:raw-value #10="UI Configuration" :begin 7995 :end 12302 :pre-blank 0 :contents-begin 8014 :contents-end 12302 :robust-begin 8016 :robust-end 12300 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7995 :title #10# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #3#)) 0] [nil nil #18=(headline (:raw-value #11="Ivy and Counsel" :begin 8689 :end 11609 :pre-blank 1 :contents-begin 8709 :contents-end 11608 :robust-begin 8711 :robust-end 11606 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8689 :title #11# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #45=(headline (:raw-value #13="Which Key" :begin 8014 :end 8689 :pre-blank 1 :contents-begin 8028 :contents-end 8688 :robust-begin 8030 :robust-end 8686 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8014 :title #13# :mode section :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [[nil nil #50=(headline (:raw-value #14="modeline and Icons" :begin 11609 :end 11779 :pre-blank 0 :contents-begin 11631 :contents-end 11779 :robust-begin 11633 :robust-end 11777 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11609 :title #14# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [nil nil #20=(headline (:raw-value #15="Development" :begin 12302 :end 15744 :pre-blank 0 :contents-begin 12316 :contents-end 15743 :robust-begin 12318 :robust-end 15741 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12302 :title #15# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #51=(headline (:raw-value #16="Dashboard" :begin 11779 :end 12302 :pre-blank 0 :contents-begin 11792 :contents-end 12302 :robust-begin 11794 :robust-end 12300 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11779 :title #16# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #48=(headline (:raw-value #17="Improved Candidate Sorting with prescient.el" :begin 10794 :end 11609 :pre-blank 1 :contents-begin 10844 :contents-end 11608 :robust-begin 10846 :robust-end 11606 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10794 :title #17# :mode nil :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [[[nil nil #54=(headline (:raw-value #19="Projectile" :begin 13261 :end 14147 :pre-blank 1 :contents-begin 13276 :contents-end 14146 :robust-begin 13278 :robust-end 14144 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13261 :title #19# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] [nil nil #60=(headline (:raw-value #21="Commenting" :begin 14760 :end 15302 :pre-blank 1 :contents-begin 14775 :contents-end 15301 :robust-begin 14777 :robust-end 15299 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14760 :title #21# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] #58=(headline (:raw-value #22="Magit" :begin 14147 :end 14760 :pre-blank 1 :contents-begin 14157 :contents-end 14759 :robust-begin 14159 :robust-end 14757 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14147 :title #22# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] [[nil nil #25=(headline (:raw-value #23="Org-mode" :begin 15744 :end 17758 :pre-blank 0 :contents-begin 15755 :contents-end 17758 :robust-begin 15757 :robust-end 17756 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15744 :title #23# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #65=(headline (:raw-value #24="Agenda setup" :begin 16382 :end 17758 :pre-blank 0 :contents-begin 16398 :contents-end 17758 :robust-begin 16400 :robust-end 17756 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16382 :title #24# :mode nil :granularity element :cached t :parent #25# :org-element--cache-sync-key nil)) 0] #64=(headline (:raw-value #26="Basic settings" :begin 15755 :end 16382 :pre-blank 0 :contents-begin 15773 :contents-end 16382 :robust-begin 15775 :robust-end 16380 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15755 :title #26# :mode section :granularity element :cached t :parent #25# :org-element--cache-sync-key nil)) 0] #62=(headline (:raw-value #27="Rainbow Delimiters" :begin 15302 :end 15744 :pre-blank 1 :contents-begin 15325 :contents-end 15743 :robust-begin 15327 :robust-end 15741 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15302 :title #27# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] #53=(headline (:raw-value #28="LSP" :begin 12316 :end 13261 :pre-blank 0 :contents-begin 12323 :contents-end 13261 :robust-begin 12325 :robust-end 13259 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12316 :title #28# :mode section :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] #43=(headline (:raw-value #29="Keybinding Configuration" :begin 5773 :end 7995 :pre-blank 1 :contents-begin 5801 :contents-end 7994 :robust-begin 5803 :robust-end 7992 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5773 :title #29# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[nil nil #3# 0] [nil nil #30# 0] (section (:begin 1 :end 109 :contents-begin 1 :contents-end 108 :robust-begin 1 :robust-end 106 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 121 :end 329 :contents-begin 121 :contents-end 328 :post-blank 1 :post-affiliated 121 :mode planning :granularity element :cached t :parent #31=(section (:begin 121 :end 1160 :contents-begin 121 :contents-end 1159 :robust-begin 121 :robust-end 1157 :post-blank 1 :post-affiliated 121 :mode section :granularity element :cached t :parent #30# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (paragraph (:begin 533 :end 740 :contents-begin 533 :contents-end 739 :post-blank 1 :post-affiliated 533 :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 329 :end 533 :contents-begin 329 :contents-end 532 :post-blank 1 :post-affiliated 329 :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #31# 0] [[[nil nil #32# 0] [nil nil (paragraph (:begin 1176 :end 1455 :contents-begin 1176 :contents-end 1454 :post-blank 1 :post-affiliated 1176 :mode planning :granularity element :cached t :parent #33=(section (:begin 1176 :end 1455 :contents-begin 1176 :contents-end 1454 :robust-begin 1176 :robust-end 1452 :post-blank 1 :post-affiliated 1176 :mode section :granularity element :cached t :parent #32# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #33# 0] [[nil nil #35=(section (:begin 1478 :end 1942 :contents-begin 1478 :contents-end 1941 :robust-begin 1478 :robust-end 1939 :post-blank 1 :post-affiliated 1478 :mode section :granularity element :cached t :parent #34# :org-element--cache-sync-key nil)) 0] [nil nil #9# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1478 :end 1942 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; The default is 800 kilobytes.  Measured in bytes.\12  (setq gc-cons-threshold (* 50 1000 1000))\12\12  (defun efs/display-startup-time ()\12    (message \"Emacs loaded in %s with %d garbage collections.\"\12             (format \"%.2f seconds\"\12                     (float-time\12                       (time-subtract after-init-time before-init-time)))\12             gcs-done))\12\12  (add-hook 'emacs-startup-hook #'efs/display-startup-time)\12\12" :post-blank 1 :post-affiliated 1478 :mode planning :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] #34# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 740 :end 1160 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; NOTE: init.el is now generated from Emacs.org.  Please edit that file\12  ;;       in Emacs and init.el will be generated automatically!\12\12  ;; You will most likely need to adjust this font size for your system!\12  (defvar efs/default-font-size 180)\12  (defvar efs/default-variable-font-size 180)\12\12  ;; Make frame transparency overridable\12  (defvar efs/frame-transparency '(90 . 90))\12\12" :post-blank 1 :post-affiliated 740 :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] [[[[nil nil (paragraph (:begin 1966 :end 2342 :contents-begin 1966 :contents-end 2341 :post-blank 1 :post-affiliated 1966 :mode planning :granularity element :cached t :parent #37=(section (:begin 1966 :end 2928 :contents-begin 1966 :contents-end 2927 :robust-begin 1966 :robust-end 2925 :post-blank 1 :post-affiliated 1966 :mode section :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #36# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2342 :end 2928 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Initialize package sources\12  (require 'package)\12\12  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")\12                           (\"org\" . \"https://orgmode.org/elpa/\")\12                           (\"elpa\" . \"https://elpa.gnu.org/packages/\")))\12\12  (package-initialize)\12  (unless package-archive-contents\12    (package-refresh-contents))\12\12    ;; Initialize use-package on non-Linux platforms\12  (unless (package-installed-p 'use-package)\12    (package-install 'use-package))\12\12  (require 'use-package)\12  (setq use-package-always-ensure t)\12\12" :post-blank 1 :post-affiliated 2342 :mode nil :granularity element :cached t :parent #37# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 2958 :end 3173 :contents-begin 2958 :contents-end 3172 :post-blank 1 :post-affiliated 2958 :mode planning :granularity element :cached t :parent #38=(section (:begin 2958 :end 3539 :contents-begin 2958 :contents-end 3538 :robust-begin 2958 :robust-end 3536 :post-blank 1 :post-affiliated 2958 :mode section :granularity element :cached t :parent #36# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3242 :end 3539 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package auto-package-update\12    :custom\12    (auto-package-update-interval 7)\12    (auto-package-update-prompt-before-update t)\12    (auto-package-update-hide-results t)\12    :config\12    (auto-package-update-maybe)\12    (auto-package-update-at-time \"09:00\"))\12\12" :post-blank 1 :post-affiliated 3242 :mode nil :granularity element :cached t :parent #38# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 3173 :end 3242 :contents-begin 3173 :contents-end 3241 :post-blank 1 :post-affiliated 3173 :mode nil :granularity element :cached t :parent #38# :org-element--cache-sync-key nil)) 0] #38# 0] [[[nil nil #40=(section (:begin 3561 :end 4434 :contents-begin 3561 :contents-end 4433 :robust-begin 3561 :robust-end 4431 :post-blank 1 :post-affiliated 3561 :mode section :granularity element :cached t :parent #39# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3942 :end 4434 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; NOTE: If you want to move everything out of the ~/.emacs.d folder\12  ;; reliably, set `user-emacs-directory` before loading no-littering!\12  ;(setq user-emacs-directory \"~/.cache/emacs\")\12\12  (use-package no-littering)\12\12  ;; no-littering doesn't set this by default so we must place\12  ;; auto save files in the same path as it uses for sessions\12  (setq auto-save-file-name-transforms\12        `((\".*\" ,(no-littering-expand-var-file-name \"auto-save/\") t)))\12\12" :post-blank 1 :post-affiliated 3942 :mode nil :granularity element :cached t :parent #40# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 3561 :end 3942 :contents-begin 3561 :contents-end 3941 :post-blank 1 :post-affiliated 3561 :mode planning :granularity element :cached t :parent #40# :org-element--cache-sync-key nil)) 0] [[nil nil #42=(section (:begin 4460 :end 5773 :contents-begin 4460 :contents-end 5773 :robust-begin 4460 :robust-end 5771 :post-blank 0 :post-affiliated 4460 :mode section :granularity element :cached t :parent #41# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4736 :end 5773 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq inhibit-startup-message t)\12\12  (scroll-bar-mode -1)        ; Disable visible scrollbar\12  (tool-bar-mode -1)          ; Disable the toolbar\12  (tooltip-mode -1)           ; Disable tooltips\12  (set-fringe-mode 10)        ; Give some breathing room\12\12  (menu-bar-mode -1)            ; Disable the menu bar\12\12  ;; Set up the visible bell\12  (setq visible-bell t)\12\12  (column-number-mode)\12  (global-display-line-numbers-mode t)\12\12  ;; Set frame transparency\12  (set-frame-parameter (selected-frame) 'alpha efs/frame-transparency)\12  (add-to-list 'default-frame-alist `(alpha . ,efs/frame-transparency))\12  (set-frame-parameter (selected-frame) 'fullscreen 'maximized)\12  (add-to-list 'default-frame-alist '(fullscreen . maximized))\12\12  ;; Disable line numbers for some modes\12  (dolist (mode '(org-mode-hook\12                  term-mode-hook\12                  shell-mode-hook\12                  treemacs-mode-hook\12                  eshell-mode-hook))\12    (add-hook mode (lambda () (display-line-numbers-mode 0))))\12\12" :post-blank 0 :post-affiliated 4736 :mode nil :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 4460 :end 4736 :contents-begin 4460 :contents-end 4735 :post-blank 1 :post-affiliated 4460 :mode planning :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] #41# 0] #39# 0] #37# 0] [[[[nil nil #44=(section (:begin 5801 :end 7995 :contents-begin 5801 :contents-end 7994 :robust-begin 5801 :robust-end 7992 :post-blank 1 :post-affiliated 5801 :mode section :granularity element :cached t :parent #43# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6227 :end 7995 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Make ESC quit prompts\12  (global-set-key (kbd \"<escape>\") 'keyboard-escape-quit)\12\12  (use-package general\12    :after evil\12    :config\12    (general-create-definer efs/leader-keys\12      :keymaps '(normal insert visual emacs)\12      :prefix \"SPC\"\12      :global-prefix \"C-SPC\")\12\12    (efs/leader-keys\12      \"t\"  '(:ignore t :which-key \"toggles\")\12      \"tt\" '(counsel-load-theme :which-key \"choose theme\")\12      \"b\" '(:ignore b :which-key \"buffers\")\12      \"bb\" 'counsel-switch-buffer\12      \"f\" '(:ignore f :which-key \"files\")\12      \"ff\" 'find-file\12      \"fde\" '(lambda () (interactive) (find-file (expand-file-name \"~/.config/emacs/emacs.org\")))\12      \"g\" '(:ignore g :which-key \"git\")\12      \"gs\" 'magit-status\12      \"o\" '(:ignore o :which-key \"orgmode\")\12      \"obt\" 'org-babel-tangle\12      \"oc\" 'org-capture\12      \"os\" 'org-schedule\12      \"oa\" 'org-agenda\12      ))\12\12  (use-package evil\12    :init\12    (setq evil-want-integration t)\12    (setq evil-want-keybinding nil)\12    (setq evil-want-C-u-scroll t)\12    (setq evil-want-C-i-jump nil)\12    :config\12    (evil-mode 1)\12    (evil-set-undo-system 'undo-tree)\12    (define-key evil-insert-state-map (kbd \"C-g\") 'evil-normal-state)\12    (define-key evil-insert-state-map (kbd \"C-h\") 'evil-delete-backward-char-and-join)\12\12    ;; Use visual line motions even outside of visual-line-mode buffers\12    (evil-global-set-key 'motion \"j\" 'evil-next-visual-line)\12    (evil-global-set-key 'motion \"k\" 'evil-previous-visual-line)\12\12    (evil-set-initial-state 'messages-buffer-mode 'normal)\12    (evil-set-initial-state 'dashboard-mode 'normal))\12\12  (use-package evil-collection\12    :after evil\12    :config\12    (evil-collection-init))\12\12  (use-package undo-tree\12    :ensure t\12    :init (global-undo-tree-mode))\12" :post-blank 1 :post-affiliated 6227 :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #44#)) 0] nil #12# -1] (paragraph (:begin 5801 :end 6227 :contents-begin 5801 :contents-end 6226 :post-blank 1 :post-affiliated 5801 :mode planning :granularity element :cached t :parent #44# :org-element--cache-sync-key nil)) 1] [nil [nil nil (paragraph (:begin 8028 :end 8518 :contents-begin 8028 :contents-end 8517 :post-blank 1 :post-affiliated 8028 :mode planning :granularity element :cached t :parent #46=(section (:begin 8028 :end 8689 :contents-begin 8028 :contents-end 8688 :robust-begin 8028 :robust-end 8686 :post-blank 1 :post-affiliated 8028 :mode section :granularity element :cached t :parent #45# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #46# 1] #45# -1] [[[nil nil #18# 0] [nil nil (paragraph (:begin 8709 :end 9100 :contents-begin 8709 :contents-end 9099 :post-blank 1 :post-affiliated 8709 :mode planning :granularity element :cached t :parent #47=(section (:begin 8709 :end 10794 :contents-begin 8709 :contents-end 10793 :robust-begin 8709 :robust-end 10791 :post-blank 1 :post-affiliated 8709 :mode section :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #47# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9248 :end 10794 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package ivy\12    :diminish\12    :bind ((\"C-s\" . swiper)\12           :map ivy-minibuffer-map\12           (\"TAB\" . ivy-alt-done)\12           (\"C-l\" . ivy-alt-done)\12           (\"C-j\" . ivy-next-line)\12           (\"C-k\" . ivy-previous-line)\12           :map ivy-switch-buffer-map\12           (\"C-k\" . ivy-previous-line)\12           (\"C-l\" . ivy-done)\12           (\"C-d\" . ivy-switch-buffer-kill)\12           :map ivy-reverse-i-search-map\12           (\"C-k\" . ivy-previous-line)\12           (\"C-d\" . ivy-reverse-i-search-kill))\12    :config\12    (ivy-mode 1))\12\12  (use-package ivy-rich\12    :after ivy\12    :init\12    (ivy-rich-mode 1))\12(use-package ivy-posframe\12  :ensure t\12  :after ivy\12  :config\12  ;; Display Ivy completions in a posframe\12  (setq ivy-posframe-display-functions-alist\12        '((t . ivy-posframe-display)))\12\12  ;; Optional: Customize posframe appearance\12  (setq ivy-posframe-parameters '((left . 10)  ;; Horizontal position\12                                  (top . 10)   ;; Vertical position\12                                  (width . 40) ;; Width of the frame\12                                  (height . 10) ;; Height of the frame\12                                  (internal-border-width . 10))) ;; Border width\12  \12  ;; Make Ivy use posframe for display\12  (ivy-posframe-mode 1))\12\12(use-package counsel\12  :ensure t\12  :bind ((\"C-s\" . counsel-grep-or-swiper)  ;; Use swiper for search\12         (\"M-x\" . counsel-M-x)           ;; Use Counsel M-x\12         (\"C-x C-f\" . counsel-find-file))) ;; Use Counsel find file\12\12" :post-blank 1 :post-affiliated 9248 :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] [nil nil #49=(section (:begin 10844 :end 11609 :contents-begin 10844 :contents-end 11608 :robust-begin 10844 :robust-end 11606 :post-blank 1 :post-affiliated 10844 :mode section :granularity element :cached t :parent #48# :org-element--cache-sync-key nil)) 0] #48# 0] (paragraph (:begin 9100 :end 9248 :contents-begin 9100 :contents-end 9247 :post-blank 1 :post-affiliated 9100 :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8518 :end 8689 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package which-key\12    :defer 0\12    :diminish which-key-mode\12    :config\12    (which-key-mode)\12    (setq which-key-idle-delay 1))\12\12" :post-blank 1 :post-affiliated 8518 :mode nil :granularity element :cached t :parent #46# :org-element--cache-sync-key nil)) -1] #43# 0] [[[[[nil nil (paragraph (:begin 11119 :end 11320 :contents-begin 11119 :contents-end 11319 :post-blank 1 :post-affiliated 11119 :mode nil :granularity element :cached t :parent #49# :org-element--cache-sync-key nil)) 0] [nil nil #50# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11320 :end 11609 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package ivy-prescient\12    :after counsel\12    :custom\12    (ivy-prescient-enable-filtering nil)\12    :config\12    ;; Uncomment the following line to have sorting remembered across sessions!\12    ;(prescient-persist-mode 1)\12    (ivy-prescient-mode 1))\12\12" :post-blank 1 :post-affiliated 11320 :mode nil :granularity element :cached t :parent #49# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11631 :end 11779 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package nerd-icons\12  :ensure t\12  )\12  (use-package doom-modeline\12  :ensure t\12  :init (doom-modeline-mode 1))\12" :post-blank 0 :post-affiliated 11631 :mode planning :granularity element :cached t :parent #52=(section (:begin 11631 :end 11779 :contents-begin 11631 :contents-end 11779 :robust-begin 11631 :robust-end 11777 :post-blank 0 :post-affiliated 11631 :mode section :granularity element :cached t :parent #50# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #57=(section (:begin 11792 :end 12302 :contents-begin 11792 :contents-end 12302 :robust-begin 11792 :robust-end 12300 :post-blank 0 :post-affiliated 11792 :mode section :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] #51# 0] #52# 0] [[[nil nil #20# 0] [nil nil #56=(section (:begin 12323 :end 13261 :contents-begin 12323 :contents-end 13261 :robust-begin 12323 :robust-end 13259 :post-blank 0 :post-affiliated 12323 :mode section :granularity element :cached t :parent #53# :org-element--cache-sync-key nil)) 0] #53# 0] [[nil nil #54# 0] [nil nil (paragraph (:begin 13276 :end 13569 :contents-begin 13276 :contents-end 13568 :post-blank 1 :post-affiliated 13276 :mode planning :granularity element :cached t :parent #55=(section (:begin 13276 :end 14147 :contents-begin 13276 :contents-end 14146 :robust-begin 13276 :robust-end 14144 :post-blank 1 :post-affiliated 13276 :mode section :granularity element :cached t :parent #54# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #55# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12323 :end 13261 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\11(use-package eglot\12      :ensure t\12\11:hook ((prog-mode . eglot-ensure))\12      :config\12      (setq eglot-server-programs\12\11    '((python-mode . (\"pyright\"))\12\11      (js-mode . (\"typescript-language-server\" \"--stdio\"))\12\11      ;; Add more language servers here as needed\12\11      )))\12    (use-package company\12      :ensure t\12      :hook (prog-mode . company-mode)  ;; Enable company mode in programming modes\12  :bind (:map company-active-map\12\11     (\"<tab>\" . company-complete-selection))\12      :custom\12      (company-minimum-prefix-length 1)\12      (company-idle-delay 0.0)\12      :config\12      (setq company-idle-delay 0.2    ;; Delay before completion menu pops up\12\11    company-minimum-prefix-length 1  ;; Trigger completions after 1 char\12\11    company-selection-wrap-around t  ;; Wrap around completion list\12\11    company-tooltip-limit 20))  ;; Max number of suggestions in tooltip\12\12    (global-company-mode 1)\12" :post-blank 0 :post-affiliated 12323 :mode planning :granularity element :cached t :parent #56# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11792 :end 12302 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package dashboard\12        :ensure t\12        :config\12        (dashboard-setup-startup-hook))\12    (setq dashboard-items '((recents   . 5)\12                            (bookmarks . 5)\12                            (projects  . 5)\12                            (agenda    . 5)\12                            (registers . 5)))\12    (setq dashboard-display-icons-p t)     ; display icons on both GUI and terminal\12  (setq dashboard-icon-type 'nerd-icons) ; use `nerd-icons' package\12" :post-blank 0 :post-affiliated 11792 :mode planning :granularity element :cached t :parent #57# :org-element--cache-sync-key nil)) 0] [[[[nil nil #58# 0] [nil nil (paragraph (:begin 14157 :end 14316 :contents-begin 14157 :contents-end 14315 :post-blank 1 :post-affiliated 14157 :mode planning :granularity element :cached t :parent #59=(section (:begin 14157 :end 14760 :contents-begin 14157 :contents-end 14759 :robust-begin 14157 :robust-end 14757 :post-blank 1 :post-affiliated 14157 :mode section :granularity element :cached t :parent #58# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #59# 0] [[nil nil #60# 0] [nil nil (paragraph (:begin 14775 :end 15176 :contents-begin 14775 :contents-end 15175 :post-blank 1 :post-affiliated 14775 :mode planning :granularity element :cached t :parent #61=(section (:begin 14775 :end 15302 :contents-begin 14775 :contents-end 15301 :robust-begin 14775 :robust-end 15299 :post-blank 1 :post-affiliated 14775 :mode section :granularity element :cached t :parent #60# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #61# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14316 :end 14760 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package magit\12    :commands magit-status\12    :custom\12    (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-v1))\12\12  ;; NOTE: Make sure to configure a GitHub token before using this package!\12  ;; - https://magit.vc/manual/forge/Token-Creation.html#Token-Creation\12  ;; - https://magit.vc/manual/ghub/Getting-Started.html#Getting-Started\12  (use-package forge\12    :after magit)\12\12" :post-blank 1 :post-affiliated 14316 :mode nil :granularity element :cached t :parent #59# :org-element--cache-sync-key nil)) 0] [[[nil nil #62# 0] [nil nil (paragraph (:begin 15325 :end 15629 :contents-begin 15325 :contents-end 15628 :post-blank 1 :post-affiliated 15325 :mode planning :granularity element :cached t :parent #63=(section (:begin 15325 :end 15744 :contents-begin 15325 :contents-end 15743 :robust-begin 15325 :robust-end 15741 :post-blank 1 :post-affiliated 15325 :mode section :granularity element :cached t :parent #62# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #63# 0] [[[nil nil #25# 0] [nil nil #67=(section (:begin 15773 :end 16382 :contents-begin 15773 :contents-end 16382 :robust-begin 15773 :robust-end 16380 :post-blank 0 :post-affiliated 15773 :mode section :granularity element :cached t :parent #64# :org-element--cache-sync-key nil)) 0] #64# 0] [[nil nil #65# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16398 :end 17758 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      ;; TODO colors\12(setq org-todo-keywords\12      '((sequence \"TODO(t)\" \"PLANNING(p)\" \"IN-PROGRESS(i@/!)\" \"VERIFYING(v!)\" \"BLOCKED(b@)\"  \"|\" \"DONE(d!)\" \"OBE(o@!)\" \"WONT-DO(w@/!)\" )\12        ))\12      (setq org-todo-keyword-faces\12\11    '(\12\11      (\"TODO\" . (:foreground \"GoldenRod\" :weight bold))\12\11      (\"PLANNING\" . (:foreground \"DeepPink\" :weight bold))\12\11      (\"IN-PROGRESS\" . (:foreground \"Cyan\" :weight bold))\12\11      (\"VERIFYING\" . (:foreground \"DarkOrange\" :weight bold))\12\11      (\"BLOCKED\" . (:foreground \"Red\" :weight bold))\12\11      (\"DONE\" . (:foreground \"LimeGreen\" :weight bold))\12\11      (\"OBE\" . (:foreground \"LimeGreen\" :weight bold))\12\11      (\"WONT-DO\" . (:foreground \"LimeGreen\" :weight bold))\12\11      ))\12    (setq org-capture-templates\12\11  '(    \12\11    (\"c\" \"Code To-Do\"\12\11     entry (file+headline \"~/org/todos.org\" \"Code Related Tasks\")\12\11     \"* TODO [#B] %?\\n:Created: %T\\n%i\\n%a\\nProposed Solution: \"\12\11     :empty-lines 0)\12      (\"m\" \"Meeting\"\12\11   entry (file+datetree \"~/org/meetings.org\")\12\11   \"* %? :meeting:%^g \\n:Created: %T\\n** Attendees\\n*** \\n** Notes\\n** Action Items\\n*** TODO [#A] \"\12\11   :tree-type week\12\11   :clock-in t\12\11   :clock-resume t\12\11   :empty-lines 0)\12  (\"g\" \"General To-Do\"\12\11   entry (file+headline \"~/org/todos.org\" \"General Tasks\")\12\11   \"* TODO [#B] %?\\n:Created: %T\\n \"\12\11   :empty-lines 0)\12\11    ))\12" :post-blank 0 :post-affiliated 16398 :mode planning :granularity element :cached t :parent #66=(section (:begin 16398 :end 17758 :contents-begin 16398 :contents-end 17758 :robust-begin 16398 :robust-end 17756 :post-blank 0 :post-affiliated 16398 :mode section :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #66# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15773 :end 16382 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; When a TODO is set to a done state, record a timestamp\12(setq org-log-done 'time)\12\12;; Follow the links\12(setq org-return-follows-link  t)\12\12;; Associate all org files with org mode\12(add-to-list 'auto-mode-alist '(\"\\\\.org\\\\'\" . org-mode))\12(setq org-agenda-files '(\"~/org\"))\12;; Make the indentation look nicer\12(add-hook 'org-mode-hook 'org-indent-mode)\12;; Hide the markers so you just see bold text as BOLD-TEXT and not *BOLD-TEXT*\12(setq org-hide-emphasis-markers t)\12\12;; Wrap the lines in org mode so that things are easier to read\12(add-hook 'org-mode-hook 'visual-line-mode)\12" :post-blank 0 :post-affiliated 15773 :mode planning :granularity element :cached t :parent #67# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15629 :end 15744 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12(use-package rainbow-delimiters\12  :hook (prog-mode . rainbow-delimiters-mode))\12\12" :post-blank 1 :post-affiliated 15629 :mode nil :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) 1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15176 :end 15302 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package evil-nerd-commenter\12    :bind (\"M-/\" . evilnc-comment-or-uncomment-lines))\12\12" :post-blank 1 :post-affiliated 15176 :mode nil :granularity element :cached t :parent #61# :org-element--cache-sync-key nil)) 1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13569 :end 14147 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package projectile\12    :diminish projectile-mode\12    :config (projectile-mode)\12    :custom ((projectile-completion-system 'ivy))\12    :bind-keymap\12    (\"C-c p\" . projectile-command-map)\12    :init\12    ;; NOTE: Set this to the folder where you keep your Git repos!\12    (when (file-directory-p \"~/Projects/Code\")\12      (setq projectile-project-search-path '(\"~/Projects/Code\")))\12    (setq projectile-switch-project-action #'projectile-dired))\12\12  (use-package counsel-projectile\12    :after projectile\12    :config (counsel-projectile-mode))\12\12" :post-blank 1 :post-affiliated 13569 :mode nil :granularity element :cached t :parent #55# :org-element--cache-sync-key nil)) 1] (paragraph (:begin 10844 :end 11119 :contents-begin 10844 :contents-end 11118 :post-blank 1 :post-affiliated 10844 :mode planning :granularity element :cached t :parent #49# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)))